#include<stdio.h>
#include<conio.h> intmain()
{
constintmax=30;
inti,n,a,temp,j,pos,prio[max],bt[max],at[max],tat[max],wt[max]; floatatat=0,awt=0;/*atat=averageturnaroundtime*/ inttem=0;
/*aisthevariabletoknowaboutscheduling*/
a:
	printf("\t\t\t\t\t................................	\n");
	printf("\t\t\t\t\t|PREEMPTIVEPRIORITYSCHEDULING|	\n");
	printf("\t\t\t\t\t................................	\n");
printf("\tDOYOUWANTTOKNOWABOUTTHESCHEDULING(Y=1/N=2)::");/*PRESS1
FORYESND2FORNO*/
scanf("%d",&a); if(a==1)
{
printf("\tPRIORITYSCHEDULING::");
printf("\nPriorityschedulingisanon-preemptivealgorithmandoneofthe
mostcommonschedulingalgorithmsinbatchsystems.\nEachprocessisassigneda priority.\nProcesswiththehighestpriorityistobeexecutedfirstandsoon.\nProcesses withthesamepriorityareexecutedonfirstcomefirstservedbasis.\nPrioritycanbe decidedbasedonmemoryrequirements,timerequirementsoranyotherresource requirement.");
printf("\n"); printf("\n\nBURSTTIME::");
printf("CPUburstiswhentheprocessisbeingexecutedintheCPU.\nI/O
burstiswhentheCPUiswaitingforI/Oforfurtherexecution."); printf("\n\nARRIVALTIME::"); printf("Itisthetimeatwhichaprocessarrivesatthereadyqueue"); printf("\n\nCOMPLETIONTIME::"); printf("Itisthetimeatwhichaprocesscompletesitsexecution"); printf("\n\nWAITINGTIME::");
printf("\nwaitingtimeishowmuchtimeaprocessspendsinthereadyqueue
waitingfortheifrturntogetonthecpu");
printf("\n\nWaitingTimeiscalculatedby::"); printf("TURNAROUNDTIME-BURSTTIME");
printf("\n\nTURNAROUNDTIME::");
printf("\nTurnAroundTimeisTimerequiredforaparticularprocessto
completefromsubmissiontimetocompletion");
printf("\n\nTurnAroundTimeiscalculatedby::"); printf("TURNAROUNDTIME-BURSTTIME");
printf("\n"); printf("\n");
printf("\t\t\tNOWPRESSANYKEYTOCONTINUETOSTART");
printf("\n"); printf("\n"); system("pause"); system("cls");
gotoa;
}
elseif(a==2)
{
b:
printf("\n\nenterthenumberofprocess::");
scanf("%d",&n); printf("\n\t\t\t\tNOWENTERTHEBURSTTIMEOFEACHPROCESS");
for(i=0;i<n;i++)
{
printf("\nenterthebursttimeofprocess%d::",i); scanf("%d",&bt[i]);/*getsbursttimeforeachandeveryprocess*/
}
printf("\n\t\t\t\tNOWPLEASEENTERTHEPRIORITYOFEACHPROCESS");
for(i=0;i<n;i++)
{
printf("\nenterpriorityofprocess%d::",i);
scanf("%d",&prio[i]);/*getsbursttimeforeachandeveryprocess*/
}
printf("\n\t\t\t\tNOWENTERTHEARRIVALTIMEOFEACHPROCESS");
for(i=0;i<n;i++)
{
printf("\nenterthearrivaltimeofprocess%d::",i); scanf("%d",&at[i]);/*getsarrivaltimeforeachandeveryprocess*/
}
printf("\n-----------------------------------------------------------------------------------------------------------------------------------
-");
for(i=0;i<n;i++)
{
pos=i;
for(j=i+1;j<n;j++)/*hereweareusingpositionvariabletocheckwhetherpriorityof
thenextprocessis greaterorsmallerthenthepreviousone*/
{
if(prio[j]<prio[pos])
{
pos=j; tem==1;
//positionisshiftedtoj//
}
}
temp=prio[i]; prio[i]=prio[pos]; prio[pos]=temp;
temp=bt[i]; bt[i]=bt[pos]; bt[pos]=temp;
temp=at[i]; at[i]=at[pos]; at[pos]=temp;
}
wt[0]=0;
printf("\n\nprocess\tbursttime\t\tpriority\t\tarrivaltime\t\twaitingtime\t \tturnaroundtime\n");
for(i=0;i<n;i++)
{
wt[i]=0; if(tem==1)
{
wt[i]+=2;
prio[i]=prio[i]*2;
}
tat[i]=0;
for(j=0;j<i;j++)
{
wt[i]=wt[i]+bt[j];
}
tat[i]=wt[i]+bt[i];
awt=awt+wt[i]; atat=atat+tat[i];
printf("\n%d\t\t%d\t\t\t%d\t\t\t%d\t\t\t%d\t\t\t%d
\n",i,bt[i],prio[i],at[i],wt[i],tat[i]);
}
awt=awt/n; atat=atat/n; printf("\naveragewaitingtimeis::%f\n",awt); printf("\naverageturnaroundtimeis::%f\n",atat); getch(); printf("\n\nifyouwanttoentervaluesagainpressenter\n"); system("pause"); system("cls");
gotob;
}
return0;
}
